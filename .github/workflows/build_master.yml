# This is a basic workflow to help you get started with Actions

name: BUILD Package

# Controls when the action will run. Triggers the workflow on push or pull request
# events but only for the master branch
on:
  pull_request:
    branches: ['master']

# A workflow run is made up of one or more jobs that can run sequentially or in parallel
jobs:
  # This workflow contains a single job called "build"
  build:
    # The type of runner that the job will run on
    runs-on: ubuntu-latest

    # Steps represent a sequence of tasks that will be executed as part of the job
    steps:
    # Checks-out your repository under $GITHUB_WORKSPACE, so your job can access it
    - uses: actions/checkout@v2
      with:
        # Disabling shallow clone is recommended for improving relevancy of reporting
        fetch-depth: 0

    # Runs a single command using the runners shell
    - name: install build requirements
      run: |
        sudo apt-get install python3-setuptools
        sudo apt-get install jq
        python3 -m pip install --upgrade pip
        python3 -m pip install -r $GITHUB_WORKSPACE/requirements_build.txt
        python3 -m pip install xenon

    # Runs a set of commands using the runners shell
    - name: Run xenon code quality check
      run: |
        python3 -m pip show xenon
        /home/runner/.local/bin/xenon --max-absolute B --max-modules A --max-average A $GITHUB_WORKSPACE/bcdc2bcdc

    # run sonar cloud
    - name: SonarCloud Scan
      uses: sonarsource/sonarcloud-github-action@master
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}

    - name: SonarCloud Quality Gate
      env:
        SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}
      run: |
        projId=$(curl  -u $SONAR_TOKEN: https://sonarcloud.io/api/ce/component?component=bcdc2bcdc | jq '.current.id' | sed -e 's/^"//' -e 's/"$//')
        analId=$(curl  -u $SONAR_TOKEN: https://sonarcloud.io/api/ce/task?id=$projId | jq '.task.analysisId' | sed -e 's/^"//' -e 's/"$//')
        qg=$(curl  -u $SONAR_TOKEN: https://sonarcloud.io/api/qualitygates/project_status?analysisId=$analId | jq '.projectStatus.status' | sed -e 's/^"//' -e 's/"$//')
        if [ "$qg" != "OK" ]; then
          # quality gate did not pass
          exit 1
        fi

    - name: Build Pypi Package
      if: success()
      env:
        TWINE_USERNAME:  ${{ secrets.TWINE_USERNAME }}
        TWINE_PASSWORD: ${{ secrets.TWINE_PASSWORD }}
        PKG_TYPE: PROD
      run: |
        python3 setup.py sdist bdist_wheel
        python3 -m twine upload dist/*

      - name: Retrieve package version from pypi
        run: |
          PACKAGE_JSON_URL="https://pypi.org/pypi/bcdc2bcdc/json"
          echo ::set-env name=TAG_NAME::$(curl -s "$PACKAGE_JSON_URL" | jq  -r '.releases | keys | .[]' | sort -V | tail -1 -)

      - name: Create the docker image
        uses: docker/build-push-action@v1
        with:
          username: ${{ secrets.DOCKERHUB_USER }}
          password: ${{ secrets.DOCKERHUB_PASSWORD }}
          repository: guylafleur/bcdc2bcdc
          tag_with_ref: true
          tag_with_sha: true
          tags: ${{ env.TAG_NAME }}




